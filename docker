http://blog.getpostman.com/2014/03/07/writing-automated-tests-for-apis-using-postman/
https://www.getpostman.com/docs/postman/collection_runs/integration_with_jenkins
Sand clock icon Glass timer symbol
rwxr-xr-x
111101101

000=0       100=4
001=1       101=5
010=2       110=6
011=3       111=7

755


  git clone http://git.tnq.co.in/submission-central/sc-component-integrator.git
  cd sc-component-integrator/
  git status
  git checkout submission-experiment-implementation

; Maximum allowed size for uploaded files.
upload_max_filesize = 40M

; Must be greater than or equal to upload_max_filesize
post_max_size = 40M

JASN 2016020248
docker exec -it WEB-OUT-UI-2 /bin/bash
rm /etc/apache2/sites-enabled/000-default.conf
service apache2 reload

apt-get install -y docker.io

docker rmi $(docker images --filter "dangling=true" -q --no-trunc)

docker run -d -v /var/www:/var/www dillip9090/ubuntu16

docker rm $(docker ps -a -q)

docker rmi $(docker images -q)


Build docker from Dockerfile
    docker build -t dillip9090/ubuntu16:latest /home/dillip/dckr

List all docker images
    docker images -a

List all docker container
    docker ps -a

Run container in docker
    docker run -it ubuntu16

    docker run -p 80:80 -it dillip9090/ubuntu16

    docker run -p 80:80 -it --volumes-from html_root_path dillip9090/ubuntu16

Commit changes in docker images
    docker commit 7281141c0e1f dillip9090/ubuntu16:latest

Tagging images
    docker tag ubuntu_installation_by_docker john/get-started:part1

Rename
    docker image tag ubuntu_installation_by_docker dillip9090/ubuntu_installation_by_docker

Login
    docker login -u dillip9090

Push
    docker push dillip9090/ubuntu16

Pull
    docker pull dillip9090/ubuntu16

Network list
    docker network ls

Inspect specified network
    docker network inspect bridge

Run custom container in network
    docker run -itd --name=networktest dillip9090/ubuntu16

Disconnect custom container from network
    docker network disconnect bridge networktest

Create custom network of bridge type
    docker network create -d bridge my_bridge

Add containers to a network
    docker run -d --net=my_bridge --name dillip9090/ubuntu16

Run Container
    docker start -i container_id
docker run -p 8080:80 -it --volumes-from alpine_html_root_path alpinejava:latest
docker create -v /var/www/html:/var/www/html --name html_root_path dillip9090/ubuntu16:latest
docker create -v /home/dillip/regression_test_suite:/home/regression_test_suite --name test_suite_path dillip9090/ubuntu16:latest

docker run -p 80:80 -it --volumes-from html_root_path  --volumes-from test_suite_path dillip9090/ubuntu16:latest


docker volume create html_root_path

docker volume ls


html_root_path

To change your user password:
    sudo passwd

To change your user password:
    passwd

To change other users password:
    sudo passwd USERNAME
gedit .bashrc
sudo supervisorctl stop proofcentral_out-cli_pc_sjs:*
sudo supervisorctl start proofcentral_out-cli_pc_sjs:*
sudo supervisorctl status
sudo supervisorctl stop proofcentral_out-api_pc_sjs:out-api_pc_sjs_00
sudo supervisorctl start proofcentral_out-api_pc_sjs:out-api_pc_sjs_00

/etc/supervisor/conf.d/

tailf /var/log/supervisor/out-cli-worker_pc_sjs_00.log



java -version
echo $JAVA_HOME
echo $JRE_HOME

tar -zxvf

cat /etc/alpine-release
apk add openrc --no-cache
 rc-service apache2 restart

 httpd -k start
export JRE_HOME=/opt/jdk/jre

dpkg -l | grep pkg-config

apt-get update --fix-missing

8106f1c6ae464a42a7ae2897d4b8f2ff
java -jar jenkins.war --httpPort=8080
dpkg -L jenkins

docker run  --rm  -u root  -p 8586:8586 -p 8080:8080 -it -v jenkins-data:/var/jenkins_home -v /home/dillip/GitHub:/var/www/localhost/htdocs -v /var/run/docker.sock:/var/run/docker.sock  -v "$HOME":/home  alpinejava:latest

docker inspect  -f "{{.Name}} {{.Config.Cmd}}"
docker ps --no-trunc

docker run -p 8080:8080 -p 50000:50000 --name=jenkins-master --volumes-from=jenkins-data -d myjenkins

docker exec jenkins-master tail -f /var/log/jenkins/jenkins.log

docker run -p 8080:8080 -p 50000:50000 -it --name=jenkins-master -v jenkins-log:/var/log/jenkins -v jenkins-home:/var/jenkins_home -v jenkins-cache:/var/cache/jenkins/war  myjenkins


docker run -p 8080:8080 -p 8586:80 -it --name=prod_jenkins_master -v prod_jenkins_log:/var/log/jenkins -v prodenkins_home:/var/jenkins_home -v prod_jenkins_cache:/var/cache/jenkins -v /home/dillip/jenkinsci_prod:/var/www/localhost/htdocs jenkin_alpine_java_php_apache





git@github.com:dillippradhan1988/jenkinsci.git/

docker exec -it dev_jenkins_master /bin/bash
docker exec -it prod_jenkins_master /bin/sh

sudo iptables -I DOCKER -j ACCEPT

stat 
stat -c %a 

cut -d: -f1 /etc/passwd

apk add openrc openssh alpine-sdk
rc-update add sshd

sudo passwd
passwd
sudo passwd USERNAME
sudo iptables -P FORWARD ACCEPT
sudo iptables -L -n

su dillip
echo $USER
sudo passwd dillip

docker run -p 8585:80 -it --name=dev_jenkins_master -v /home/dillip/jenkinsci_client:/var/www/localhost/htdocs alpine_java_php_apache

docker run -p 8080:8080 -p 8586:80 -it --name=prod_jenkins_master --user="root" -e JENKINS_OPTS="--handlerCountStartup=100 --handlerCountMax=300 --logfile=/var/log/jenkins/jenkins.log" -v prod_jenkins_log:/var/log/jenkins -v prod_jenkins_home:/var/jenkins_home -v prod_jenkins_cache:/var/cache/jenkins -v /home/dillip/jenkinsci_prod:/var/www/localhost/htdocs jenkin_alpine_java_php_apache

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4r+eAx2Z1Vki1T6/H4lsDqlVE0lCPzwbo/X3dORzG+/UXnciIE3YsD02xgNO0ve9Z7MgpvThX1Ag3RdHyxEEphETvWagiFZgeP9kjuUUKZpzMPmun4BBdEZMoXLmfb9/2nqwzyzbgBuhLYigtDF1c4DlOPMJYIc6JPn+u84LRnXVbH5cDqfW6TrWfW8G8qpgZqRNi02KRPac7NF0h6i8IZQgMHk+bYuXj3hAaX0BitnMN663GsF+9Rvh/bSOd/x0mp3Wd/Yi4bFKdVdq5KYxW6rIMT3lESI9l21SobLfKtjNpfS3uiOlRaiLwam2aguy979n3f9Pi8ihrO51QbOs1 jenkins@a0f0da925ad2

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6GsSukdSVABSgHGvizmPLHW9iAVps18E04ic593/BNajWWk51UdFwxEHuAkeANe5GWJAOs0DUDtUJozf9ARY23ukA9qmFgQh0W46UTZDuvpOp4UOEEwKMI//0C0pvYS/86DCyfgCCtEP4u/bdZQ9ANcihdSxaTclVPDes8Jv45h8syo7D7C6zaf0LLR/ijH9i1M/ZeOwKTNSW6/z+cLcDo3wcZg9C/2Zmp2mak+8fSkK6LZBfuJMCebBlOegxTG9a9UCtVNspLbc5rEPCtsmeJ24iDhHwVEdY17AvVxwqWBIVYiZmPnbYwqmgv8ygitjqWeS3gC2y54+sHby/53in jenkins@c69ec559a84e



ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCgxk1zFR/ATEYJ2sD/RkqL/5O0/NeoDe4RdL0FqOrgtHue11ip/wnIsh6V133RHH1EUfSTMZ2aCLG2Vk0y4GrGC2xl2biDiyRr0vw+2HHU3TlL/hXtX5HpnskPLwVhBzAo6kg09I6mncIXW5vMpeXi+vc47Q6GZO20eUwUQfN9pZ5i+4b7tcv+t+3ZB8yn5up1fD5nF8ZO0YGfg2WjjxmsGot654dOHydVpRNBauFJtyoxHc0ihtk2MqDvR4hfolhGPQVqCzsVOPr3q3eEB4qQYluorOebByblEOEsQWvJmT4FOOWKrhwDAiunjj1hV678MP8vzU2O90PWjA+yH1EN root@c69ec559a84e


ENV JENKINS_OPTS="--logfile=/var/log/jenkins/jenkins.log"


docker run -itd -p 8585:80 --name=dev_alpine -v /home/dillip/project:/var/www/localhost/htdocs devalpine

docker run -itd -p 8080:8080 -p 8586:80 -p 9000:9000 --name=prod_alpine --add-host="git.tnq.co.in:10.0.0.160" -v /home/dillip/project:/var/www/localhost/htdocs -v prod_alpine_home:/var/jenkins_home -v /var/log/jenkins:/var/log/jenkins -v prod_alpine_cache:/var/cache/jenkins -v /opt/sonarqube:/opt/sonarqube prodalpine


ENV JENKINS_OPTS="--logfile=/var/log/jenkins/jenkins.log"

docker machine does not resolve local machine

o69CBEYPbbJHvh5JcP_K

 java -Dmail.smtp.starttls.enable="true" -jar hudson.war

 /usr/local/bin/jenkins.sh
 
 
 export JENKINS_VERSION=2.73.2 \
export JENKINS_HOME=/var/jenkins_home \
export JENKINS_UC=https://updates.jenkins.io \
export JENKINS_SLAVE_AGENT_PORT=50000 \
export JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental

https://hub.docker.com/r/daicho/alpine-jenkins/~/dockerfile/
https://github.com/SonarSource/docker-sonarqube/blob/c6aa0bbe967999f37cfa64522b3ae6ff0fda04de/6.5-alpine/Dockerfile

#!/bin/sh
ssh -t -t root@172.17.0.2 <<EOF 
    cd /var/www/localhost/htdocs/jenkinsci
    #git pull origin master    
    touch phpError.txt
    find . -name \*.php -exec php -l {} \; | grep -v 'No syntax errors' > phpError.txt
    noOfLine=$(wc -l < phpError.txt)                                             
   
    echo $noOfLine
    if [ $? -eq 1 && $noOfLine -gt 0]
    then
        echo "Unable to build."
        exit 1
    else
        echo "Successfully built."
        exit 0
    fi
EOF
http://codeception.com/02-04-2015/setting-up-jenkins-with-codeception.html
https://medium.com/@teeks99/continuous-integration-with-jenkins-and-gitlab-fa770c62e88a

php7-intl php7-openssl php7-tokenizer php7-dev php7-xmlrpc php7-xmlreader php7-xml php7-curl php7-phar php7-ctype php7-simplexml php7-mysqli php7-pdo_mysql

    lighttpd php7-common php7-iconv php7-json php7-gd php7-pgsql php7-cgi php7-imap fcgi php7-pdo_pgsql php7-pdo php7-soap php7-xmlrpc php7-posix php7-gettext php7-ldap php7-pdo_mysql

    docker run -it --name dev-mysql -e MYSQL_ROOT_PASSWORD=test1234 mysql

    docker run -p 8585:80 -it --name=dev_jenkins_master --link dev-mysql:mysql -v /home/dillip/jenkinsci_client:/var/www/localhost/htdocs alpine_java_php_apache

    docker run -it --name prodsonar -p 9000:9000 -p 9092:9092 -v sonar_home:/opt/sonarqube -v sonar_data:/opt/sonarqube/data sonarqube

    docker run -it --name prod_alpine -p 8080:8080 -p 5555:80 -v /home/dillip/jenkinsci_prod:/var/www/localhost/htdocs -v /var/jenkins_home:/var/jenkins_home prodalpine

    CREATE TABLE products (
         id bigint NOT NULL AUTO_INCREMENT,
         product_name varchar(255) NOT NULL,
         created_at DATETIME,
         updated_at DATETIME,
         PRIMARY KEY (id)
    );

    apk add --update nodejs nodejs-npm

    newman run Github\ API.postman_collection.json -e GITHUB_ENV.postman_environment.json
